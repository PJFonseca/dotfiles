#Clears some dirs
function clean(){
	sudo rm -r ~/$DOWNLOAD_FOLDER/* 2> /dev/null
	sudo rm -r ~/$IMAGES_FOLDER/* 2> /dev/null
	sudo rm -rf ~/.local/share/Trash/info/* 2> /dev/null
	sudo rm -rf ~/.local/share/Trash/files/* 2> /dev/null
	
	msgout success "System clean!"
}

#Update host files to block bad hosts
function ublock(){
	sudo wget -O '/etc/hosts' 'https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn/hosts' &> /dev/null && sync &> /dev/null
	sudo -- sh -c "echo 1.2.3.4 account.jetbrains.com >> /etc/hosts"
	sudo -- sh -c "echo 1.2.3.4 http://www.jetbrains.com >> /etc/hosts"
	sudo -- sh -c "echo 1.2.3.4 www-weighted.jetbrains.com >> /etc/hosts"
	sudo -- sh -c "echo 0.0.0.0 https://account.jetbrains.com:443 >> /etc/hosts"
	sudo -- sh -c "echo 0.0.0.0 account.jetbrains.com >> /etc/hosts"
	msgout success "Hosts updated!"
}

function togglehost() {
    if [ -e /etc/host.bak ]
    then
        sudo mv /etc/host.bak /etc/hosts
        echo "Hosts file is active again"
    else
        sudo mv /etc/hosts /etc/host.bak
        echo "Hosts file is set aside"
    fi
}

function update(){
    DISTRO="$(lsb_release -a | sed -n '3p' | awk '{ print $2 }')"
    if [[ "${DISTRO}" = "Fedora" ]]; then
        sudo dnf -y update --best --allowerasing --skip-broken && sudo dnf -y upgrade --refresh && sudo dnf -y autoremove && sudo dnf -y clean all && backup && ydl_update && clean && ublock && vmware_build_kernel
		#Update GNOME Shell Extensions
		gnome-shell-extension-installer --yes --update --restart-shell
	fi;
}

function backup(){
		local destiny=$LINUX_BACKUP_FOLDER

		#Clean Backup dir
		rm -rf $LINUX_BACKUP_FOLDER/*
		find ~/.cache/ -type f -atime +1 -delete

		if [ ! -d "$LINUX_BACKUP_FOLDER/.config/" ]; then
			mkdir "$LINUX_BACKUP_FOLDER/.config/"
		fi
		if [ ! -d "$LINUX_BACKUP_FOLDER/.config/" ]; then
			mkdir "$LINUX_BACKUP_FOLDER/.config/"
		fi
		#vsCode
		cp -R ~/.config/Code/User $LINUX_BACKUP_FOLDER/.config/Code/

		#DBeaver
		cp -R ~/.local/share/.DBeaverData $LINUX_BACKUP_FOLDER/.local/share/.DBeaverData

		#Filezilla
		cp -R ~/.config/filezilla $LINUX_BACKUP_FOLDER/.config/filezilla/
		#Keepassxc
		cp -R ~/.config/keepassxc $LINUX_BACKUP_FOLDER/.config/keepassxc/
		#teamviewer
		cp -R ~/.config/teamviewer $LINUX_BACKUP_FOLDER/.config/teamviewer/
		#VNC
		cp -R ~/.vnc $LINUX_BACKUP_FOLDER/
		#variety
		cp -R ~/.config/variety $LINUX_BACKUP_FOLDER/.config/variety/
		#ssh
		cp -R ~/.ssh $LINUX_BACKUP_FOLDER/.ssh/
		#autostart
		cp -R ~/.config/autostart $LINUX_BACKUP_FOLDER/.config/autostart/
		#remmina
		cp -R ~/.local/share/remmina $LINUX_BACKUP_FOLDER/.local/share/remmina
		cp -R ~/.config/remmina $LINUX_BACKUP_FOLDER/.config/remmina

		#GNOME Settings
		dconf dump /org/gnome/shell/extensions/dash-to-panel/ > $LINUX_BACKUP_FOLDER/dash_to_panel_settings
		dconf dump /org/gnome/shell/extensions/clock_override/ > $LINUX_BACKUP_FOLDER/clock_override_settings
		dconf dump /org/gnome/shell/extensions/panel-osd/ > $LINUX_BACKUP_FOLDER/panel_osd_settings
		dconf dump /org/gnome/shell/extensions/screenshot/ > $LINUX_BACKUP_FOLDER/screenshot_settings
		dconf dump /org/gnome/shell/extensions/openweather/ > $LINUX_BACKUP_FOLDER/openweather_settings
		dconf dump /org/gnome/settings-daemon/plugins/media-keys/ > $LINUX_BACKUP_FOLDER/media-keys
		dconf dump /org/gnome/desktop/wm/keybindings/ > $LINUX_BACKUP_FOLDER/keybindings
		dconf dump /org/gnome/mutter/keybindings/ > $LINUX_BACKUP_FOLDER/keybindings_mutter
		dconf dump /org/gnome/mutter/wayland/keybindings/ > $LINUX_BACKUP_FOLDER/keybindings_wayland
		dconf dump /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/ > $LINUX_BACKUP_FOLDER/custom-keybindings
		dconf dump /org/gnome/terminal/ > $LINUX_BACKUP_FOLDER/terminal
		
		#OpenHAB Backup
		if [ "$(ls -A /mnt/openhab-conf)" ]; then
			name=$(date '+%Y%m%d')
			tar -zcvf "$DOWNLOAD_FOLDER/$name.openhab.tar.gz" /mnt/openhab-conf/
			cp -R "$DOWNLOAD_FOLDER/$name.openhab.tar.gz" $LINUX_BACKUP_FOLDER/
		fi

		snapshot

		msgout success "Personal Backup done!"
		cd ~/
}

function restore(){
	#Restore files from Dropbox
	cp -R $LINUX_BACKUP_FOLDER/ ~/

	#settings
	dconf load /org/gnome/shell/extensions/dash-to-panel/ < $LINUX_BACKUP_FOLDER/dash_to_panel_settings
	dconf load /org/gnome/shell/extensions/clock_override/ < $LINUX_BACKUP_FOLDER/clock_override_settings
	dconf load /org/gnome/shell/extensions/panel-osd/ < $LINUX_BACKUP_FOLDER/panel_osd_settings
	dconf load /org/gnome/shell/extensions/screenshot/ < $LINUX_BACKUP_FOLDER/screenshot_settings
	dconf load /org/gnome/shell/extensions/openweather/ < $LINUX_BACKUP_FOLDER/openweather_settings
	dconf load /org/gnome/settings-daemon/plugins/media-keys/ < $LINUX_BACKUP_FOLDER/media-keys
	dconf load /org/gnome/desktop/wm/keybindings/ < $LINUX_BACKUP_FOLDER/keybindings
	dconf load /org/gnome/mutter/keybindings/ < $LINUX_BACKUP_FOLDER/keybindings_mutter
	dconf load /org/gnome/mutter/wayland/keybindings/ < $LINUX_BACKUP_FOLDER/keybindings_wayland
	dconf load /org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/ < $LINUX_BACKUP_FOLDER/custom-keybindings
	dconf load /org/gnome/terminal/ < $LINUX_BACKUP_FOLDER/terminal

	msgout success "Restore done!"
	cd ~/
}
#Update dotfiles
function dotfiles_update(){
	sudo rm -rf ~/.dotfiles && git clone --recurse-submodules https://github.com/PJFonseca/dotfiles ~/.dotfiles
	rm -rf ~/.bashrc && ln -s ~/.dotfiles/.bashrc ~/.bashrc && rm -rf ~/.gitconfig && ln -s ~/.dotfiles/.gitconfig ~/.gitconfig && rm -rf ~/.bash_prompt && ln -s ~/.dotfiles/.bash_prompt ~/.bash_prompt
	reload
}